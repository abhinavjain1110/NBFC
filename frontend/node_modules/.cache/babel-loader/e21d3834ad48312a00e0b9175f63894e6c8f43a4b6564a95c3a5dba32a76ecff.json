{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Spinny\\\\frontend\\\\src\\\\components\\\\Style\\\\Button.js\";\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cn } from \"@/lib/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonVariants = {\n  variants: {\n    variant: {\n      default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n      destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n      outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n      secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n      ghost: \"hover:bg-accent hover:text-accent-foreground\",\n      link: \"text-primary underline-offset-4 hover:underline\"\n    },\n    size: {\n      default: \"h-10 px-4 py-2\",\n      sm: \"h-9 rounded-md px-3\",\n      lg: \"h-11 rounded-md px-8\",\n      icon: \"h-10 w-10\"\n    }\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"default\"\n  }\n};\nconst Button = /*#__PURE__*/React.forwardRef(_c = ({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}, ref) => {\n  const Comp = asChild ? Slot : \"button\";\n\n  // Determine the classes based on variant and size\n  let variantClass = buttonVariants.variants.variant[variant || buttonVariants.defaultVariants.variant];\n  let sizeClass = buttonVariants.variants.size[size || buttonVariants.defaultVariants.size];\n  return /*#__PURE__*/_jsxDEV(Comp, {\n    className: cn(\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\", variantClass, sizeClass, className),\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n});\n_c2 = Button;\nButton.displayName = \"Button\";\nexport { Button, buttonVariants };\nvar _c, _c2;\n$RefreshReg$(_c, \"Button$React.forwardRef\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"names":["React","Slot","cn","jsxDEV","_jsxDEV","buttonVariants","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","forwardRef","_c","className","asChild","props","ref","Comp","variantClass","sizeClass","fileName","_jsxFileName","lineNumber","columnNumber","_c2","displayName","$RefreshReg$"],"sources":["D:/Web Development/Spinny/frontend/src/components/Style/Button.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = {\r\n  variants: {\r\n    variant: {\r\n      default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n      destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n      outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n      secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n      ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n      link: \"text-primary underline-offset-4 hover:underline\",\r\n    },\r\n    size: {\r\n      default: \"h-10 px-4 py-2\",\r\n      sm: \"h-9 rounded-md px-3\",\r\n      lg: \"h-11 rounded-md px-8\",\r\n      icon: \"h-10 w-10\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n    size: \"default\",\r\n  }\r\n}\r\n\r\nconst Button = React.forwardRef(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    \r\n    // Determine the classes based on variant and size\r\n    let variantClass = buttonVariants.variants.variant[variant || buttonVariants.defaultVariants.variant];\r\n    let sizeClass = buttonVariants.variants.size[size || buttonVariants.defaultVariants.size];\r\n    \r\n    return (\r\n      <Comp\r\n        className={cn(\r\n          \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n          variantClass,\r\n          sizeClass,\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,EAAE,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,cAAc,GAAG;EACrBC,QAAQ,EAAE;IACRC,OAAO,EAAE;MACPC,OAAO,EAAE,wDAAwD;MACjEC,WAAW,EAAE,oEAAoE;MACjFC,OAAO,EAAE,gFAAgF;MACzFC,SAAS,EAAE,8DAA8D;MACzEC,KAAK,EAAE,8CAA8C;MACrDC,IAAI,EAAE;IACR,CAAC;IACDC,IAAI,EAAE;MACJN,OAAO,EAAE,gBAAgB;MACzBO,EAAE,EAAE,qBAAqB;MACzBC,EAAE,EAAE,sBAAsB;MAC1BC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,eAAe,EAAE;IACfX,OAAO,EAAE,SAAS;IAClBO,IAAI,EAAE;EACR;AACF,CAAC;AAED,MAAMK,MAAM,gBAAGnB,KAAK,CAACoB,UAAU,CAAAC,EAAA,GAC7BA,CAAC;EAAEC,SAAS;EAAEf,OAAO;EAAEO,IAAI;EAAES,OAAO,GAAG,KAAK;EAAE,GAAGC;AAAM,CAAC,EAAEC,GAAG,KAAK;EAChE,MAAMC,IAAI,GAAGH,OAAO,GAAGtB,IAAI,GAAG,QAAQ;;EAEtC;EACA,IAAI0B,YAAY,GAAGtB,cAAc,CAACC,QAAQ,CAACC,OAAO,CAACA,OAAO,IAAIF,cAAc,CAACa,eAAe,CAACX,OAAO,CAAC;EACrG,IAAIqB,SAAS,GAAGvB,cAAc,CAACC,QAAQ,CAACQ,IAAI,CAACA,IAAI,IAAIT,cAAc,CAACa,eAAe,CAACJ,IAAI,CAAC;EAEzF,oBACEV,OAAA,CAACsB,IAAI;IACHJ,SAAS,EAAEpB,EAAE,CACX,0VAA0V,EAC1VyB,YAAY,EACZC,SAAS,EACTN,SACF,CAAE;IACFG,GAAG,EAAEA,GAAI;IAAA,GACLD;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEN,CACF,CAAC;AAAAC,GAAA,GArBKd,MAAM;AAsBZA,MAAM,CAACe,WAAW,GAAG,QAAQ;AAE7B,SAASf,MAAM,EAAEd,cAAc;AAAE,IAAAgB,EAAA,EAAAY,GAAA;AAAAE,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}